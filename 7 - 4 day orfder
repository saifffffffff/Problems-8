#include <vector>
#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>
#include <ctime>
#include "Mylib.h"

using namespace std;

bool IsLeapYear(short year) {
	return (year % 400 == 0) || (year % 100 != 0 && year % 4 == 0);
}

short NumberOfDaysInYear(short year) {
	return IsLeapYear(year) ? 366 : 365;
}
short NumberOfHoursInYear(short year) {
	return NumberOfDaysInYear(year) * 24;
}
int NumberOfMinutesInYear(short year) {
	return NumberOfHoursInYear(year) * 60.f;
}
int NumberOfSecondsInYear(short year) {
	return NumberOfMinutesInYear(year) * 60.f;
}


short NumberOfDaysInMonth(short month, short year) {

	//short MonthsWith31Day[] = {1,3,5,7,8,10,12};

	if (month > 12 || month < 1)
		return 0;
	short DaysInMonth[12] = { 31,28 ,31 ,30,31,30,31,31,30,31,30, 31 };

	return month == 2 ? (IsLeapYear(year) ? 29 : 28) : DaysInMonth[month - 1];

}
short NumberOfHoursInMonth(short month, short year) {

	return NumberOfDaysInMonth(month, year) * 24;

}
int NumberOfMinutesInMonth(short month, short year) {
	return NumberOfHoursInMonth(month, year) * 60;
}
int NumberOfSecondsInMonth(short month, short year) {
	return NumberOfMinutesInMonth(month, year) * 60;
}

void PrintDate(short day,short month, short year) {
	cout << day << " / " << month << "/" << year << endl;
}

short DayOfWeekOrder(short day, short month, short year) {
	
	short a = (14 - month) / 12;
	short y = year - a;
	short m = month + 12 * a - 2;
	short d = (int)(day + y + (y / 4) - (y / 100) + (y / 400) + ((31 * m) / 12)) % 7;

	return d;

}

string DayName(short DayOrder) {
	string days[] = { "sunday", "monday", "tuesday", "wednesday","thursday", "friday" , "saturday"};
	return days[DayOrder];
}

int main() {
	short year, month, day;

	cout << "Year : ";
	cin >> year;
	cout << "Month : ";
	cin >> month;
	cout << "day : ";
	cin >> day;


	cout << DayName(DayOfWeekOrder(day, month, year));

	
	
	return 0;
}
