#include <vector>
#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>
#include <ctime>
#include "Mylib.h"

using namespace std;


bool IsLeapYear(short year) {
	return (year % 400 == 0) || (year % 100 != 0 && year % 4 == 0);
}
short NumberOfDaysInYear(short year) {
	return IsLeapYear(year) ? 366 : 365;
}
short NumberOfHoursInYear(short year) {
	return NumberOfDaysInYear(year) * 24;
}
int NumberOfMinutesInYear(short year) {
	return NumberOfHoursInYear(year) * 60.f;
}
int NumberOfSecondsInYear(short year) {
	return NumberOfMinutesInYear(year) * 60.f;
}


short NumberOfDaysInMonth(short month, short year) {

	//short MonthsWith31Day[] = {1,3,5,7,8,10,12};

	if (month > 12 || month < 1)
		return 0;
	short DaysInMonth[12] = { 31,28 ,31 ,30,31,30,31,31,30,31,30, 31 };

	return month == 2 ? (IsLeapYear(year) ? 29 : 28) : DaysInMonth[month - 1];

}
short NumberOfHoursInMonth(short month, short year) {

	return NumberOfDaysInMonth(month, year) * 24;

}
int NumberOfMinutesInMonth(short month, short year) {
	return NumberOfHoursInMonth(month, year) * 60;
}
int NumberOfSecondsInMonth(short month, short year) {
	return NumberOfMinutesInMonth(month, year) * 60;
}


short DayOfWeekOrder(short day, short month, short year) {

	short a = (14 - month) / 12;
	short y = year - a;
	short m = month + 12 * a - 2;
	short d = (int)(day + y + (y / 4) - (y / 100) + (y / 400) + ((31 * m) / 12)) % 7;

	return d;

}
string DayName(short DayOrder) {
	string days[] = { "sunday", "monday", "tuesday", "wednesday","thursday", "friday" , "saturday" };
	return days[DayOrder];
}
string DayShortName(short DayOrder) {
	string days[] = { "Sun", "Mon", "Tue", "Wed","Thu", "Fri" , "Sat" };
	return days[DayOrder];
}

// proble 8 - 4

string MonthShortName(short month) {
	string months[] = { "Jan", "Feb" ,"Mar" , "Apr" , "May", "Jun", "Jul", "Aug","Sep", "Oct", "Nov","Dec" };

	return months[month - 1 ];
}

void MyPrintMonthCalender(short month, short year) {

	cout << "___________________" << MonthShortName(month) << "__________________" << endl << endl;
	
	short NumberOfDays = NumberOfDaysInMonth(month, year);
	short FirstDay = DayOfWeekOrder(1, month, year);
	
	int DaysTable[5][7/*days cols*/];
	
	short DayDate = 1;
	
	
	for (short row = 0; row < 5 ; row++) {
		
		for (short col = 0; col < 7; col++ ) {
			
			if (DayDate > NumberOfDays)
				break;

			if (row == 0 && col + FirstDay < 7)
				DaysTable[0][col + FirstDay] = DayDate++;
			
			else if (row > 0 )
				DaysTable[row][col] = DayDate++;

		}

	}
	
	cout << " ";
	for (short day = 0; day < 7; day++) 
		cout  << DayShortName(day) << "   ";
	cout << endl;
	for (short row = 0; row < 5; row++) {

		for (short col = 0; col < 7; col++) {
			
			
			if (NumberOfDays == 0)
				break;

			if (row == 0) {
				if (col == 0 )
					cout << Utility::RepeatString(FirstDay, "      ");
				if (col + FirstDay < 7 )
				{
					NumberOfDays--;
					cout << setw(4) << DaysTable[0][col + FirstDay] << "  ";
				}
				
			}

			else if (row > 0) 
			{	
				NumberOfDays--;
				cout << setw(4)<<DaysTable[row][col] << "  ";
			}

		}
		cout << endl;
	}
	cout << "________________________________________" << endl << endl;

}

void PrintMonthCalender(short month, short year) {

	short FirstDay = DayOfWeekOrder(1, month, year);
	short NumberOfDays = NumberOfDaysInMonth(month, year);

	printf("________________%s________________\n\n", MonthShortName(month).c_str());
	printf("  sun  mon  tue  wed  thu  fri  sat\n");
	int i;
	for (i = 0; i < FirstDay; i++)
		cout << "     ";
	
	for (int j = 1; j <= NumberOfDays; j++) {
		printf("%5d", j);
		
		if (++i == 7)
		{
			cout << endl;
			i = 0;
		}
	}
	printf("\n___________________________________\n");



}
int main() {
	PrintMonthCalender(8, 1990);
	return 0;
}
